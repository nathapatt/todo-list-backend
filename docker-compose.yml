name: todolist-project

services:
  db:
    image: postgres:17-alpine
    container_name: todo_db
    restart: unless-stopped
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_APP_USER=${POSTGRES_APP_USER}
      - POSTGRES_APP_PASSWORD=${POSTGRES_APP_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./_entrypoint:/docker-entrypoint-initdb.d:ro
    networks:
      - todo-network

  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: todo_backend
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_PORT=${POSTGRES_PORT}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_APP_USER=${POSTGRES_APP_USER}
      - POSTGRES_APP_PASSWORD=${POSTGRES_APP_PASSWORD}
      - JWT_SECRET=${JWT_SECRET}
      - NODE_ENV=${NODE_ENV}
      - PORT=${PORT}
    depends_on:
      - db
    networks:
      - todo-network
    command: >
      sh -c "
      export DATABASE_URL=postgresql://$$POSTGRES_APP_USER:$$POSTGRES_APP_PASSWORD@$$POSTGRES_HOST:$$POSTGRES_PORT/$$POSTGRES_DB &&
      npx prisma migrate deploy &&
      npm run start:prod
      "

volumes:
  postgres_data:
networks:
  todo-network:
